<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title><%= post ? 'Edit' : 'New' %> Post</title>

  <link rel="stylesheet" href="https://unpkg.com/easymde/dist/easymde.min.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    /* make EasyMDE fit nicely */
    .EasyMDEContainer { border-radius:.375rem; overflow:hidden; }
  </style>
</head>
<body class="container py-5">

  <h1 class="mb-4"><%= post ? 'Edit' : 'Create' %> Post</h1>

  <form id="postForm" class="vstack gap-4">

    <!-- Title -->
    <div>
      <label class="form-label fw-semibold">Title</label>
      <input class="form-control" name="title" placeholder="Article title"
             value="<%= post ? post.title : '' %>" required>
    </div>

    <!-- Slug -->
    <div>
      <label class="form-label fw-semibold">Slug (URL)</label>
      <input class="form-control" name="slug" placeholder="slug-my-post"
             value="<%= post ? post.slug : '' %>" required pattern="^[a-z0-9-]+$">
      <div class="form-text">Lower-case letters, numbers and dashes only.</div>
    </div>

    <!-- Category -->
    <div>
      <label class="form-label fw-semibold">Category</label>
      <% const cat = post ? post.category : 'news'; %>
      <select class="form-select" name="category">
        <option value="news"    <%= cat==='news'    ? 'selected' : '' %>>News</option>
        <option value="service" <%= cat==='service' ? 'selected' : '' %>>Service</option>
        <option value="tips"    <%= cat==='tips'    ? 'selected' : '' %>>Tips</option>
      </select>
    </div>

    <!-- EasyMDE -->
    <div>
      <label class="form-label fw-semibold">Content (Markdown)</label>
      <textarea id="editor" name="content_md"><%= post ? post.content_md : '' %></textarea>
    </div>

    <!-- Excerpt -->
    <div>
      <label class="form-label fw-semibold">Excerpt (optional)</label>
      <textarea class="form-control" rows="3" name="excerpt"
                placeholder="Short summary shown on cards"><%= post ? post.excerpt : '' %></textarea>
    </div>

    <!-- Featured image -->
    <div>
      <label class="form-label fw-semibold">Featured image</label>
      <input type="file" id="imgInput" accept="image/*" class="form-control">
      <input type="hidden" name="img_base" value="<%= post ? post.img_base : '' %>">
      <img id="imgPreview"
           src="<%= post && post.img_base ? '/uploads/'+post.img_base+'-card.jpg' : '' %>"
           style="max-width:220px;<%= post && post.img_base ? '' : 'display:none' %>;margin-top:.75rem;">
      <div class="form-text">Automatically resized for hero/banner and card.</div>
    </div>

    <!-- Publish switch -->
    <div class="form-check form-switch">
      <input class="form-check-input" type="checkbox" name="published" value="1"
             id="pubSwitch" <%= post && post.published ? 'checked' : '' %>>
      <label class="form-check-label fw-semibold" for="pubSwitch">Published</label>
    </div>

    <!-- Buttons -->
    <div>
      <button class="btn btn-primary">Save</button>
      <% if (post) { %>
        <button id="deleteBtn" type="button" class="btn btn-danger ms-2">Delete</button>
      <% } %>
    </div>
  </form>

  <hr class="my-5">
  <h2 class="mb-3">All Posts</h2>
  <ul id="postList" class="list-group"></ul>

  <script src="https://unpkg.com/easymde/dist/easymde.min.js"></script>
  <script type="module">
    /* ---------- EasyMDE with inline-image upload ---------- */
    const easyMDE = new EasyMDE({
      element      : document.getElementById('editor'),
      spellChecker : false,
      status       : false,
      placeholder  : 'Start writing…',
      toolbar: [
        'bold', 'italic', 'heading', '|',
        'unordered-list', 'ordered-list', '|',
        {
          name    : 'upload-image',
          action  : async function customImageUpload(editor){
            const fileInput = document.createElement('input');
            fileInput.type  = 'file';
            fileInput.accept= 'image/*';
            fileInput.onchange = async () => {
              if (!fileInput.files.length) return;
              const fd = new FormData();
              fd.append('file', fileInput.files[0]);

              const res = await fetch('/admin/upload-inline', {
                method:'POST', body:fd
              });
              if (!res.ok) return alert('Upload failed');
              const { url } = await res.json();   // {url:"/uploads/…-body.jpg"}
              const cm = editor.codemirror;
              const pos= cm.getCursor();
              cm.replaceRange(`![](${url})\n`, pos);
            };
            fileInput.click();
          },
          className: 'fa fa-picture-o',
          title    : 'Insert image'
        },
        '|', 'preview', 'side-by-side', 'fullscreen', '|', 'guide'
      ]
    });

    /* ---------- helpers ---------- */
    const qs = s => document.querySelector(s);

    /* ---------- Save ---------- */
    qs('#postForm').addEventListener('submit', async e => {
      e.preventDefault();
      qs('[name="content_md"]').value = easyMDE.value();     // sync
      const data = Object.fromEntries(new FormData(e.target));
      data.published = data.published ? 1 : 0;

      const r = await fetch('/admin/save', {
        method:'POST', headers:{'Content-Type':'application/json'},
        body: JSON.stringify(data)
      });
      if (r.ok) { alert('Saved ✔︎'); location.reload(); } else { alert('Error'); }
    });

    /* ---------- Delete ---------- */
    <% if (post) { %>
    qs('#deleteBtn')?.addEventListener('click', async () => {
      if (!confirm('Delete this post?')) return;
      await fetch('/admin/<%= post.slug %>', { method:'DELETE' });
      location.href = '/admin';
    });
    <% } %>

    /* ---------- Featured-image upload ---------- */
    const imgInput   = qs('#imgInput');
    const imgPreview = qs('#imgPreview');

    imgInput?.addEventListener('change', async () => {
      if (!imgInput.files.length) return;
      const fd = new FormData();
      fd.append('file', imgInput.files[0]);

      const r = await fetch('/admin/upload', { method:'POST', body:fd });
      if (!r.ok) { alert('Upload failed'); return; }
      const { basename } = await r.json();
      qs('[name=img_base]').value = basename;
      imgPreview.src = `/uploads/${basename}-card.jpg`;
      imgPreview.style.display = 'block';
    });

    /* ---------- List ---------- */
    async function loadList(){
      const r   = await fetch('/api/posts');
      const all = await r.json();
      qs('#postList').innerHTML = all.map(p=>`
        <li class="list-group-item d-flex justify-content-between align-items-center">
          <a href="/admin/${p.slug}">${p.title}</a>
          <span class="badge bg-${p.published?'success':'secondary'}">
            ${p.published?'live':'draft'}
          </span>
        </li>`).join('');
    }
    loadList();
  </script>
</body>
</html>
